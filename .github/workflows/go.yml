name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  Build_and_Test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  Sonar_Analysis:
    runs-on: ubuntu-latest
    needs: Build_and_Test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=DEIN_PROJECT_KEY
            -Dsonar.organization=DEINE_ORGANISATION

  Vulnerability_Scan:
    runs-on: ubuntu-latest
    needs: Build_and_Test
    steps:
      - uses: actions/checkout@v3
      - id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Scan Docker Image
        uses: aquasecurity/trivy-action@0.10.0
        continue-on-error: true
        with:
          image-ref: '${{ secrets.DOCKERHUB_USER }}/cicd-workshop-test-image:${{ steps.vars.outputs.sha_short }}'
          severity: 'CRITICAL,HIGH'
          exit-code: 1

      - name: Scan IaC
        uses: aquasecurity/trivy-action@0.10.0
        continue-on-error: true
        with:
          scan-type: 'config'
          severity: 'CRITICAL,HIGH'

  Docker_Build_and_Publish:
    runs-on: ubuntu-latest
    needs: [Sonar_Analysis, Vulnerability_Scan]  # Warten auf beide Jobs
    steps:
      - uses: actions/checkout@v3
      - id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker Login 
        uses: docker/login-action@v2.1.0
        with: 
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/cicd-workshop-image:latest,${{ secrets.DOCKERHUB_USER }}/cicd-workshop-image:${{ steps.vars.outputs.sha_short }}
