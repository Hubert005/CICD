name: Go

on:
  push:
    branches: 
      - "main"
      - "step-2-docker-build"
  pull_request:
    branches: [ "main" ]

jobs:

  Build_and_Test: # Name des Jobs
    runs-on: ubuntu-latest #Job läuft in einer virtuellen Maschine mit dem neuesten Ubuntu-Betriebssystem
    steps:
      - uses: actions/checkout@v3 #offizielle GitHub Action, um den Code aus dem Repository in die virtuelle Maschine zu klonen

      - name: Set up Go #verwendet die GitHub Action actions/setup-go@v3, um Go in der gewünschten Version (1.19) zu installieren
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  
  Docker_Build_and_Publish:
    runs-on: ubuntu-latest
    needs: Build_and_Test  
    steps:
      - uses: actions/checkout@v3
      - id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Docker Login 
        uses: docker/login-action@v2.1.0
        with: 
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4.0.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/cicd-workshop-image:latest,${{ secrets.DOCKERHUB_USER }}/cicd-workshop-image:${{ steps.vars.outputs.sha_short }}